syntax = "proto3";

option java_multiple_files = true;
option java_package = "grpc.conferenceRoom";
option java_outer_classname = "ConferenceRoomService";

// Defining the service containing methods
service ConferenceRoom {

	//Server stream rpc
	//Client requests available conference rooms, server returns a stream of available rooms
	rpc GetAvailableRooms (GetAvailableRoomsRequest) returns (stream GetAvailableRoomsResponse) {}

	//Unary rpc
	//Client books a conference room, server returns confirmation message
	rpc BookConferenceRoom (BookConferenceRoomRequest) returns (BookConferenceRoomResponse) {}

	//Client streaming
	//Sensor keeps sending the occcupancy data, the server returns the total occupacy data
	rpc SendOccupancyData (stream OccupancyDataRequest) returns (OccupancyDataResponse) {}
}

// Defining the data types
message GetAvailableRoomsRequest {
	string date = 1;
	string timeslot = 2;
}

message GetAvailableRoomsResponse {
	int32 conferenceRoomId = 2;
}

message BookConferenceRoomRequest {
	string date = 1;
	string timeslot = 2;
	int32 numParticipants = 3;
	int32 conferenceRoomId = 4;
}

message BookConferenceRoomResponse {
	string message = 1;
}

message OccupancyDataRequest {
	int32 numOccupancy = 1;
}

message OccupancyDataResponse {
	int32 totalOccupancy = 1;

}